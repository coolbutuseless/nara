% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nr-blit.R
\name{nr_blit}
\alias{nr_blit}
\title{Copy one \code{nativeRaster} image into another at an arbitrary location.}
\usage{
nr_blit(
  dst,
  src,
  x,
  y,
  xsrc = 0L,
  ysrc = 0L,
  w = -1L,
  h = -1L,
  hjust = 0.5,
  vjust = 0.5,
  angle = 0,
  scale = 1,
  respect_alpha = TRUE
)
}
\arguments{
\item{dst, src}{source and destination native rasters}

\item{x, y}{Where in \code{nr} to place the \code{sprite}. These values must
be vectors of the same length.  If the length is greater than 1, then
the \code{sprite} will be pasted into \code{nr} at multiple locations.
Note that the
origin of \code{nativeraster} images is the top-left
where the coordinates are (0, 0).}

\item{xsrc, ysrc}{start coordiates within src}

\item{w, h}{size within src. If size is negative, then the actual width/height of
the src is used}

\item{hjust, vjust}{specify horizontal and vertical justification of the 
\code{src} image.  e.g. \code{hjust = vjust = 0} the blitting
starts at the top-left of the image. Use \code{hjust = vjust = 0.5}
to treat the centre of the \code{src_} as the blitting origin.
Default (0, 0)}

\item{angle}{Rotation angle (clockwise) in radians. Default: 0}

\item{scale}{Zoom factor. Default: 1}

\item{respect_alpha}{Should the alpha channel be respected when blitting?
Default: TRUE means to carefully blend pixels at each location 
using alpha values.  If FALSE, then contents at the \code{dst} will 
just be replaced with \code{src} pixels
which can be much much faster.}
}
\value{
None. \code{dst} modified by-reference and returned invisibly.
}
\description{
Single source blitted to one or more locations.
}
\examples{
nr <- nr_new(50, 50, 'grey80')
nr_blit(dst = nr, src = deer_sprites[[1]], x = 25, y = 25)
plot(nr, T)

nr <- nr_new(300, 200, 'grey80')
sq <- nr_new(20, 20, 'darkblue')
nr_blit(nr, src = sq, x = 100, y = 100, angle = pi/3, scale = 5)
plot(nr, T)

nr <- nr_new(300, 200, 'grey80')
sq <- png::readPNG(system.file("img", "Rlogo.png", package="png"), native = TRUE)
nr_blit(nr, src = sq, x = 180, y = 120, angle = pi/6, scale = 1)
plot(nr, T)

}
